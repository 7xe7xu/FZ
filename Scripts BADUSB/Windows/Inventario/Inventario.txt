REM Abrir PowerShell
DELAY 1000
GUI r
DELAY 500
STRING powershell
ENTER
DELAY 1000

REM Crear reporte HTML ordenado y estilizado en el escritorio con timestamp y secciones contraídas
STRING $out="$env:USERPROFILE\Desktop\reporte_inventario_$(Get-Date -Format 'yyyyMMdd_HHmmss').html";
ENTER

REM Nombre del equipo
STRING $pc=(Get-WmiObject Win32_ComputerSystem).Name;
ENTER

REM Version comercial de Windows (22H2, etc.)
STRING $winVer=(Get-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion").DisplayVersion;
ENTER
STRING if(-not $winVer){$winVer=(Get-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion").ReleaseId};
ENTER

REM CSS y cabecera HTML con nombre de equipo
STRING $h="<html><head><title>Inventario</title><style>body{background-color:#1e1e2f;color:#e0e0e0;font-family:'Segoe UI',Tahoma,Geneva,Verdana,sans-serif;margin:20px;}h1{color:#ff6f61;border-bottom:2px solid #ff6f61;padding-bottom:10px;}details{margin-bottom:18px;background:#23233a;border-radius:8px;box-shadow:0 2px 8px #0002;}summary{font-size:1.2em;font-weight:bold;color:#ffa07a;cursor:pointer;padding:10px 0 10px 10px;}pre{background-color:#2e2e44;padding:15px 15px 15px 25px;border-radius:0 0 8px 8px;overflow-x:auto;box-shadow:inset 0 0 5px #000000aa;margin:0;}details[open] summary{border-bottom:1px solid #ffa07a;}h3{color:#ffb07a;margin-top:10px;}</style></head><body><h1>Inventario de $pc</h1>";
ENTER

REM Equipo (RAM en GB)
STRING $ram=[Math]::Round((Get-WmiObject Win32_ComputerSystem).TotalPhysicalMemory/1GB,2);
ENTER
STRING $h+="<details><summary>Equipo</summary><pre>"+(Get-WmiObject Win32_ComputerSystem|Select-Object Manufacturer,Model|Out-String)+"RAM: $ram GB</pre></details>";
ENTER

REM Sistema Operativo con versión comercial
STRING $h+="<details><summary>Sistema Operativo</summary><pre>"+(Get-CimInstance Win32_OperatingSystem|Select-Object Caption,Version,OSArchitecture|Out-String)+"Versión: $winVer</pre></details>";
ENTER

REM Procesador
STRING $h+="<details><summary>Procesador</summary><pre>"+(Get-WmiObject Win32_Processor|Select-Object Name,NumberOfCores,MaxClockSpeed|Out-String)+"</pre></details>";
ENTER

REM Discos (tamaño y espacio libre en GB)
STRING $discos=Get-WmiObject Win32_LogicalDisk|Where-Object {$_.Size -gt 0}|Select-Object DeviceID,VolumeName,@{N='Size(GB)';E={[Math]::Round($_.Size/1GB,2)}},@{N='FreeSpace(GB)';E={[Math]::Round($_.FreeSpace/1GB,2)}};
ENTER
STRING $h+="<details><summary>Discos</summary><pre>"+($discos|Out-String)+"</pre></details>";
ENTER

REM Usuarios locales
STRING $h+="<details><summary>Usuarios locales</summary><pre>"+(Get-LocalUser|Select-Object Name,Enabled|Out-String)+"</pre></details>";
ENTER

REM Servicios activos
STRING $h+="<details><summary>Servicios activos</summary><pre>"+(Get-Service|Where-Object {$_.Status -eq 'Running'}|Select-Object Name,DisplayName|Out-String)+"</pre></details>";
ENTER

REM Parches instalados
STRING $h+="<details><summary>Parches instalados</summary><pre>"+(Get-HotFix|Select-Object HotFixID,InstalledOn|Out-String)+"</pre></details>";
ENTER

REM Red: direcciones IP y adaptadores
STRING $h+="<details><summary>Red</summary><h3>Direcciones IP</h3><pre>"+(Get-NetIPAddress|Where-Object {$_.AddressFamily -eq 'IPv4' -and $_.IPAddress -notlike '169.*'}|Select-Object InterfaceAlias,IPAddress|Out-String)+"</pre><h3>Adaptadores de red</h3><pre>"+(Get-NetAdapter|Select-Object Name,Status,MacAddress|Out-String)+"</pre></details>";
ENTER

REM Finalizar HTML y guardar
STRING $h+="</body></html>";
ENTER
STRING $h|Out-File -Encoding UTF8 $out;Start-Process $out
ENTER

REM Cerrar PowerShell
STRING exit
ENTER